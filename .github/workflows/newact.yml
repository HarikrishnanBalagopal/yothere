name: Dispatch And Wait

on: workflow_dispatch

jobs:
  dispatch_and_wait:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.MOVE2KUBE_PATOKEN }}
          script: |
            const owner = 'HarikrishnanBalagopal';
            const repo = 'yohoo';
            const workflow_filename = 'target.yml';
            const commit_ref_to_run_on = 'main';
            const max_tries = 3;
            const time_between_polls = 5000; // in milli seconds
            const timeout = 20 * 60 * 1000; // in milli seconds

            const resp = await github.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: workflow_filename,
              ref: commit_ref_to_run_on,
              inputs: {"foo": "bar"},
            });
            core.debug('workflow dispatched', resp);

            function wait(milli_seconds) {
              return new Promise(resolve => {
                setTimeout(() => resolve(), milli_seconds);
              });
            }

            let workflow_runs = [];
            for(let i = 0; i < max_tries; i++) {
              await wait(time_between_polls); // pause X seconds to let the workflow get scheduled.
              const resp = await github.actions.listWorkflowRuns({
                owner,
                repo,
                workflow_id: workflow_filename,
                branch: commit_ref_to_run_on,
                event: "workflow_dispatch",
              });
              if(resp.data && resp.data.workflow_runs && resp.data.workflow_runs.length > 0) {
                core.debug('found the workflow run', resp);
                workflow_runs = resp.data.workflow_runs;
                break;
              }
              if(i >= max_tries) {
                return core.setFailed('Failed to get the workflow run');
              }
            }

            const workflow_run_id = workflow_runs[0].id;
